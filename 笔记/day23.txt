* 伪元素
  * 每个元素内都有一前一后两个隐藏元素(自闭合标签没有)
  * 通过类似这种选择器span::before, span::after选中
    * 选择器严格来说应该是双冒号,但由于历史遗留原因,单冒号也是可以的,但实际上单冒号是伪类的选择器
  * 伪类与伪元素的区别
    * 伪类是实际元素的隐含是状态
    * 伪元素是每个元素前后多个出的隐藏元素
  * 伪元素选择器的后面不能再出现其它选择器了:
    * span::before p {} 这是无意义的,因为伪元素里面肯定没有其它元素了
    * 伪元素不能被:hover匹配
      * span::before:hover 是无效的
      * span:hover::before 这种写法是有效的,表示span被hover时它的伪元素的样式
    * 伪元素选择器本身不计优先级,伪元素样式冲突时看其前序选择器的优先级
  * 不设置内容时它们不出现
    * content属性设置内容，只能给伪元素设置，普通元素无效
      * content: 'woeifj';
      * content: attr(attr-name); 取标签的属性值做为其内容,但不注意不能取标签之间的字做为其内容,只能取属性值
      * content: url(xxx.png); 将图片做为其内容,一般不使用,因为无法设置图片的样式,如果真要用图片,一般是使用background-image来设置伪元素的背景图片
    * 伪元素只在css中存在，在js中不存在，内部的文字也无法选中
  * 内容可以设置为文本，图片但一般只设置为图片
  * 什么时候用
    * 一系列类似元素统一装饰性样式(即不需要交互)，但该样式需要添加额外元素时，即可用伪元素
      * 一般只有装饰性效果使用,可交互效果不使用,因为伪元素不可交互,文字也不可选中
    * 或者是有时为了省去添加一个元素这种操作时使用
* 列表
  * list-style-type: none/circle/square/disc/number 设置项目标号的样式
  * list-style-image: url(xxx.png);用图片来做为项目标号;无法调整和改变图片的大小对齐等,所以一般不使用/可以用伪元素来替代
  * list-style-position: inside/outside;设置项目标号的位置
  * list-style 以上三个属性的简写
* 媒体查询,我们可以根据显示在不同设备上(屏幕还是打印)/窗口的宽度/高度(的范围)/比例/(手机)屏幕方向/像素比例等来启用或禁用一段css代码
  * 根据屏幕的宽度来让页面的布局发生变化
  * @media (max-width: 200px) { 最大生效宽度为200px,即窗口宽度小于等于200时生效 }
  * @media (min-width: 300px) {}
  * 由于上面的写法有点违反直觉,所以现在也支持:
    * @media (width >= 200px) {}
    * @media (height < 5000px) {}
  * @media (width: 200px) {当且仅当窗口宽度为200px时生效}
  * @media (xx) and (yyy) {两个条件同时满足时生效}
  * @media print {打印时生效(如可以在这里去掉背景)}
  * @media screen {显示在屏幕上时生效(如可以在这里去掉背景)}
  * 包在media query里的代码优先级计算方式不变
  * 可以借助这个特性实现响应式页面
* **css变量**，也称css自定义属性,即属性名可以随意自己定义,需要以--开头,不区分大小写
  * 会自动继承
  * 通过**var(--variable-name)**引用，可以参与运算
* 选择器嵌套/less/sass
  * 内层的选择器（伪类）必须以符号开头(~+>*:[.#),不能以字母开头(即标签选择器),sass/less无此限制。都要空格链接，要加空格，但是
  * 内层选择器以&开头时,它与外层选择的连接是没有空格的 