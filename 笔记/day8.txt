  * a标签
      * anchor, 锚
      * 语义是一个链接，链接地址写在  href（Hyperlink REFerence）属性里
          * 可以链接到的类型非常多，而且一般来说是可扩展的
              * 绝对网址，fullpath
                  * `<a href="https://jd.com/">京东</a>`
              * 页内特定位置跳转地址
                  * `<a href="#pos1"></a>`
                  * 例：https://html.spec.whatwg.org/multipage/grouping-content.html#the-dl-element
              * 其它页特定位置跳转地址
                  * `<a href="http://jd.com/#footer"></a>`
              * 这个在书目的章节跳转在使用的比较多
              * 相对路径
                  * <a href="https://baidu.com/">baidu</a>
                  * <a href="a.html">baidu</a>

                  * `<a href=".././../a/b/../index.html"></a>`
                  * `<a href="./index.html"></a>`
                  * `<a href="../index.html"></a>`
                    * http://a.com/a/b/c.html
                      * http://a.com/a/b/index.html
                      * http://a.com/a/index.html
                  * `<a href="/index.html"></a>`
                    * http://a.com/a/b/lkj/adsfa/sdf/c.html
                    * http://a.com/index.html
              * 电子邮件
                  * `<a href="mailto:aaa@bbb.com"></a>`
                  * `<a href="mailto:aaa@bbb.com?title=1&subject=2&content=3"></a>`
                    * 需要在电脑安装邮件客户端
              * 电话号码　tel:18611075877
                * 主要用在手机页面上
              * QQ/taobao 临时会话
                * tencent://temp-chat?QQ=285696737
                * thunder://ghjk;adfklasdhfkweuhfasdlfk
              * 等等等等
                  - thunder://LKDJOIE7436239/
              * 空的href属性 href=""  href="."
                  * 链接到当前页面
                      * 所以仅以#开头的值是中转到当前页面的特定位置
                  * <img src="">
                  * 类似的，如果一个img标签的src属性为空，也将对应当前页面地址
                      * https://www.nczonline.net/blog/2009/11/30/empty-image-src-can-destroy-your-site/
      * target属性
          * 可以指定在哪个窗口打开链接
              * 几个特殊值,关键字
                  * _blank，链接在空白的窗口显示，也就相当于新打开一个窗口了
                  * _self，其实这个是默认值，就是在当前窗体打开
                  * _parent，链接在父窗体显示
                  * _top，链接在顶层窗体显示
              * 自定义值
                  * shopingcart，要求不能以_开头，出处：https://www.w3.org/TR/html-markup/datatypes.html#common.data.browsing-context-name-def
                  * 这点等讲到iframe等标签时再说
                      - _parent
                      - _top这两个属性也是需要讲到iframe时再提起

      * 在html5中，还有一个download属性
        `
          * 表示点击这个链接将下载链接对应的文件，而不是跳转到目标页面，下载的文件名以download属性的值来命名
              * `<a href="xxx/jianai.pdf" download="简爱.pdf">点我下截《简爱》完整版</a>`
              * 只能触发下载自己网站上的资源，只能在真正的网址上使用，即url以http开头
              * 问题，如果同时有target=“_blank”，又有download属性，它如何行为呢？
                  * 请自行测试
              * 为什么要有这个属性呢？传统浏览器中，要触发下载，需要服务端的支持，给出特定的http头才会触发浏览器下载而不是打开对应的内容
                  * 这个属性的出现可以让点击下载完全由前端来完成
  * p 段落
  * img  图片,,自闭合标签
    * src="" 设置图片地址
    * alt="" 设置图片的替换文字,在图片加载失败时显示
    * width="" 设置图片的宽度
    * height="" 高度
  * h1,h2,h3,h4,h5,h6
    * 一般来讲,一个页面最好只有一个一级标题
  * strong/em/i/u/b/
  * 块级标签
    * 自动占满一整行的空间
    * h123456,p,ul/ol/li
  * 行内标签
    * 能够跟其它普通文字在同一行
    * strong/em/i/u,a,img
  * ul/ol(unordered list,   ordered list, 无序列表,有序列表)
    * li(list item,列表项)
    * ul/ol里必须只能直接放li标签,不能放别的标签
    * li里就可以随意书写标签了
  * dl/dt/dd
  * br,hr 自闭合标签
  * div
  * span

  * 标签的通用属性/全局属性(即可以用在每个标签上的属性)
    * class 标签的分类,每个标签可以有多个分类,用空格隔开
    * id 标签的唯一id,类似于身份证号码,每个标签的id必须唯一,不能与其它标签的id重复
    * title 鼠标悬浮时的工具提示
    * lang 设置这个标签内文字的语言
    * style 设置标签的样式

  * a标签页内跳转

  * form 表单
    * form元素
      * action属性 表单提交的地址
      * target属性 表单在当前窗口还是在新窗口提交,同a标签的这个属性

      https://www.example.com/mono/register?username=fwef&password=wefwef&realname=werwer

      https://www.example.com/mono/register?username=xr&password=123456&realname=xieran


      https://www.bing.com/search?q=foo&PC=U316&FORM=CHROMN

    * button
    * input
      * type=text,number,email,range,color,file,radio,checkbox
      * reset,submit
    * label
    * fieldset
    * legend
    * textarea
    * select
      * option
      * optgroup
    * progress
            * 表单标签
                - form标签
                    - input
                        - https://www.google.com.hk/search?q=invalid+inentity+escape+in+regular+expression
                        - https://stackoverflow.com/questions/36953775/firefox-error-unable-to-check-input-because-the-pattern-is-not-a-valid-regexp
                        - https://www.fxsitecompat.com/en-CA/docs/2016/input-pattern-now-sets-u-flag-for-regular-expressions/
                        - https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input
                    * 属性
                        + action
                            * 表单提交的地址
                        + target
                            * 行为类似a标签的target
                        + method
                            * 表单提交方式
                                - get
                                    + 将表单字段拼成querystring
                                        * 什么是querystring？
                                            - http://abc.com/?a=1&b=2&c=3
                                - post
                                    * 这个等学到http再说
                        + enctype，编码方式
                            * 在讲到http的时候再谈
                - input
                    + type属性的各项值
                        * text
                            - 文本
                        * password
                            - 密码
                        * checkbox
                            - 复选框
                            - 以name相同分组
                            - checked属性表示默认选中
                        * radio
                            - 单选框
                            - 剩余同上
                        * file
                            - accept
                                + 可以接受的文件类型
                                + `<input type="file" name="" id="" accept="image/*,text/*">`
                                * MIME Type 媒体类型 Multipurpose Internet Mail Extensiion
                                + `<input type="file" name="" id="" accept=".jpg,.png,.gif,.jpeg,.webp,.exe" value="c:/user/xieran/desktop/a.pdf">`
                                * http://wwww.a.com/favicon.ico
                            - 安全问题
                            - multiple
                                + 是否支持多选文件
                            * .txt  text/plain
                            * .js   application/javascript
                            * .css  text/css
                            * .html text/html
                            * .png  image/png
                            * .jpg  image/jpeg
                            * .gif  image/gif
                        * hidden
                            - 隐藏的输入域
                            - value设置其值
                            - name设置名字
                        * 为以下四个值时，都表现为按钮的样式，按钮上的文字需要用value属性来设置
                        * image
                            - 从功能上讲是一个表单提交按钮
                            - 从形态上看是一个图片
                            - 此时需要使用src属性指定图片的地址
                            - 现在基本上不这么用，之所以有这个用法，是以前不用js时想做出漂亮的按钮时，需要这么用
                            - 在html5中，可以在这种标签上给定width跟height，类似img标签相应的属性，src，alt
                        * button
                        * submit
                            - 单击时会触发表单的提交
                        * reset
                            - 单击时会重置表单为初始状态
                        * **以下为html5新增属性值**
                        * number
                            - 输入数字
                            * e,.,-
                            * -3.14e-8
                            *
                        * email
                            - multiple
                            - 使用半角逗号分隔每个地址
                        * date
                        * datetime-local
                        * time
                        * week
                        * month
                        * url
                          * protocal://user:password@domain:port/a/b/c/d.html?a=b&c=d#sldjfoiwjeofij
                          * 百度.中国
                        * tel
                        * range
                            - min，4
                            - max，10
                            - step，2
                        * color
                            - value将返回十六进制颜色#abcdef
                        * 不能识别的值，当做text来处理

                    * input的其它属性
                        - value
                            + 为按钮形态时设置上面的文字
                            + 为输入框时设置里面的默认内容
                              * datetime-local
                                * https://zh.wikipedia.org/wiki/ISO_8601
                        - name
                            + 很重要，表单提交时，这个域/字段/框/FormControl的名字
                            + 同时，在radio和checkbox阵列里，name相同的元素被分在一组里


                        - disabled
                            + 无值的属性
                            + 禁用这个输入域
                        - required
                            + 设置这个输入域为必填项
                            + 不填的话无法用**正常手段**触发表单提交
                        - maxlength
                            + 为文本输入框时设置输入的最大长度
                        - minlength
                            + 同上，但为设置最小长度
                            + 不过兼容性不太好，不少浏览器没有实现
                                * 有点矛盾，不填的时候是空的，当然会非法
                        - placeholder
                            + 占位符
                            + 提示性文字，一旦输入内容就消失
                        - autofocus
                            + 自动获得焦点，即页面加载完后光标自动在这个元素内
                        - tabindex
                            + 按tab键在不同输入域之间跳转时的顺序
                            + 会往顺序更大的元素跳
                            + 为-1的话会跳过那个元素
                - button
                    + type属性
                        * 不写type属性的话，默认为submit
                            - 即：无type的button的type属性默认为submit
                        * `<button type="reset/button/submit">Submit</button>`
                        * button
                            - 常规按钮，功能上与input[type="button"]一样
                        * submit
                            - 提交按钮，功能上与input[type="submit"]一样
                        * reset
                            - 重置按钮，功能上与input[type="reset"]一样
                    + 与`<input type="button" name="b" value="lksjdf">`的区别
                        * input的button只能在按钮上显示纯文字
                        * 而button标签可以在按钮上显示其它内容比如图片（即嵌套其它标签），文字也可以设置不同颜色等
                - label 标签
                    + 一般与checkbox及radio一起用，以扩大这两个按钮的可点击区域，提升用户体验。当然，也可以跟其它元素一起用，不过一般没必要（比较典型的是与input:file一起用）
                    - for属性
                        + 为想要被扩大点击区域的元素的id，不带井号
                        - 细节：在ie8及以下不能用于displaynone的表单元素，可能是因为 not focusable
                        - 表单元素嵌套在label的时候可以不用for属性
                          ```html
                          <form action="">
                            有for的用法
                            <label for="oneid">One</label>

                            <input onclick type="text" id="oneid">

                            不用for的用法
                            <label>
                              <input type="checkbox"> 男
                            </label>
                          </form>
                          ```
                    - 如下怎么算呢？
                      ```html
                      <input id="a">
                      <label for="a"> lllll
                        <input type="text">
                      </label>
                      ```

                    - 典型的坑，两次点击，等学了js后再谈
                - select name="sel"
                    + 下拉选择框
                    + 属性
                        * multiple
                            - 无值属性，表示多选，多选时就不是下拉的样式了
                    + 另外此标签在不同的系统里面样式差别很大，而且它的样式一般来说是取自系统自带的，所以很难被css控制
                        * 所以一些对 ui 要求比较高的网站都选择用其它元素模拟下拉框
                            - 例：小米路由器
                    + size属性控制默认显示的数量，也即它的尺寸
                * option
                    * value
                        - 选择了该项目后它所属的select元素的值
                    * selected
                        - 默认被选中
                    * disabled
                        - 表示该项被禁用
                    * hidden
                        - 表示该项被隐藏
                    - 以上三个属性均无值
                * optgroup // hgroup  colgroup
                    - 给option分组
                    - 用label属性表示这个分组的名字
                    - 无法被选中，只选择option
                    - 有一个disabled属性，如果设置了这个属性，整组标签都会被禁用
                    ```html
                    <select>
                        <option value="1">1</option>
                        <optgroup label="这是一个分组" disabled hidden>
                            <option value="01">01</option>
                            <option value="02">02</option>
                            <option value="03">03</option>
                            <option value="04">04</option>
                            <option value="05">05</option>
                        </optgroup>
                    </select>
                    ```
                    - 兼容性不确定，因为我没用过mac。。。。

                - textarea
                    + 多行文本输入框
                    + 两个特殊属性
                        * rows="3" 行
                        * cols="20" 列  column
                      + 不过现在也不常用，一般都用css来控制了
                - fieldset 字段组 用来把 一组 输入域 放在一起的。
                    + field就是字段的意思，就是说一个表单输入域（输入框）
                    + 这个标签用来给输入域分组，所以叫set
                        * set本来就是组的意思
                    + 如果只是分组，完全可以用div等标签
                        * 那这个标签有什么用呢？
                        * fieldset有个disabled属性，如果它有了这个属性，其内的所有输入域都将被禁用，类似optgroup
                            - 在某些场景下是非常好用的
                - legend
                    + 只能作为 field set 的子元素，用来标识这组输入域的名字，基本上没有其它用处
                        * 而且在有了css之后，这个标签基本也没有用武之地了



  * html实体 html entity （转义符）
    * &nbsp; non-breaking space 160号空格
    * &amp; &符  ampersand
    * &copy; 版权符
    * &lt; 小于号 lettle then
    * &gt; 大于号 greater then
    * &quot; 双引号 quote
    * &apos; 单引号
    * &#x61; 用字符的十六进制
    * &#97; 用字符编号的十进制,所以这一行同上一行
    * 实际上每个符号都可以用转义符表示
  * html对空白字符的忽略
    * pre标签
  * 标签能否任意嵌套？
    * 标签的分类与嵌套原则
    * https://developer.mozilla.org/zh-CN/docs/Web/HTML/Content_categories
    * https://validator.w3.org/
  * 语义标签 html5中新增的
    * section <div class="wrapper container content"></div>
    * article <div class="article"></div>
    * aside   <div class="sidebar"></div>
    * main    <div class="main"></div>
    * header <div class="header"></div>
    * footer <div class="footer"></div>
    * nav    <div class="nav"></div>