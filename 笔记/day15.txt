```css
* 垂直方向
  * 也有三个属性可以设置为auto（margin-top/bottom，height）
    * 但是垂直方向margin为auto时相当于0，情况就简单很多了
      * 当前布局是这样,有些其它布局模型里不是这样
  * height为auto时元素的高度是由内容撑开
        *水平方向是包含块决定自己的宽度/垂直方向是子元素(内容)决定自己的高度
    * 分两种情况
      * 元素没有边框也没有内边距时
        * 高度是从最高元素的border-box(不是margin-box)的最高点到最低元素的border-box的最低点
          * 即margin是在外面的
          * 而且子元素的margin成为包含块元素的margin
          * 这就是所谓的外边距合并/margin重叠
        * 但当元素有边框或内边距时或元素触发BFC时，则是能把子元素的margin也包住
      * 当块元素的两个margin在垂直方向上碰到一起的时候，会发生合并
        * 可能出现在相邻的兄弟元素上
        * 可能出现在父子(即上文提到的子元素的margin跑到父元素外面,成为父元素的margin)，爷孙元素上
        * 也可能出现在表兄弟上
        * 也可能出现在叔侄元素之间
        * 自己的上下margin之间
      * 合并时保留绝对值较大者
        * 如果有负的
          * 负值与负值合并(保留绝对值较大者)
          * 正值与正值合并(保留绝对值较大者)
          * 然后正负再抵消
      * BFC 块级格式化上下文 Block Formatting Context
        * 简单来说就是元素形成了小宇宙(被盒子关起来),内外互不影响
          * 里面的东西不会跑出去,就算跑出去也不会影响外面的布局
        * 多数时候元素的内外本来就互不影响,但还是有少数时候会影响
          * 比如margin超出去,或者下文中行内块元素的基线等
          * 这时触发bfc就可以让元素彻底形成小宇宙
        * 如何触发BFC?
          * overflow:hidden;看起来会让元素把超出的东西隐藏,但当height为auto时,就不会有东西超出去,所以overflow:hidden真想隐藏元素时,都是元素要有定高(只讨论高度)
          * display: flow-root; 比较新的display值,触发bfc,其它方面还是跟块元素一样
          * 定位元素
          * 行内块元素
          * 表单元格元素
  * 高度不为auto时
    * 为固定值
      * 元素的高度就是指定的值
      * 其它元素感知到的它的高度也是这个值
        * 即:如果有内容超出，超出的部分会被别的元素忽略而只考虑该外层元素设置的大小
    * 为百分比, 高度设置为百分比,如果生效,是基于包含块的高度的
        * 只有包含块的高度不为auto时才生效
          * 为什么？因为会形成逻辑冲突:父子元素的高度相互依赖,即为冲突
        * 不生效时相当于auto
        * 包含块也同理，**有可能产生包含块写了高度但实际无效导致当前元素的也无效**
          * 也就是说包含块的百分比高度有效时,其子元素的百分比高度才会有效,否则都会无效
  * 垂直方向上的margin和padding也可以写成百分比
    * 该百分比基于谁?
      * 是基于包含块的宽度
    * 该百分比会不会生效?
      * 会生效,因为不会再形成相互依赖的关系进而产生逻辑冲突了
    * 应用:宽高比固定的元素
  * 列表项（ul，ol，li，dl，dt，dd）的布局
    * 其实就是ul与li都是块元素，只不过ul有一个默认的左内/外边距
    * 以及li有一个项目标号，但它可以不影响布局（也可以影响）
```